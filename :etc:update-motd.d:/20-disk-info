#!/bin/bash

# Function to determine background color based on temperature
get_color() {
    local temp=$1
    if [ "$temp" -lt 30 ]; then
        echo "cyan"  # Background color for temperatures under 30°C
    elif [ "$temp" -lt 38 ]; then
        echo "green" # Background color for temperatures between 30°C and 37°C
    elif [ "$temp" -lt 40 ]; then
        echo "yellow" # Background color for temperatures between 38°C and 39°C
    else
        echo "red" # Background color for temperatures 40°C or higher
    fi
}

# Function to apply background color formatting
apply_color() {
    local color=$1
    case "$color" in
        "cyan") echo -e "\e[46m" ;;   # Cyan background
        "green") echo -e "\e[42m" ;;  # Green background
        "yellow") echo -e "\e[43m" ;; # Yellow background
        "red") echo -e "\e[41m" ;;    # Red background
        *) echo -e "\e[0m" ;;         # Default (reset)
    esac
}

# Display hard disk temperatures with color highlighting
echo "Hard Disk Temperatures:"

# Initialize output variable
output=""

# Loop through the disks
for disk in /dev/sd[a-z]; do
    if [ -b "$disk" ]; then
        TEMP=$(sudo smartctl -A "$disk" | grep -i "Temperature_Celsius" | awk '{print $10}')
        if [ ! -z "$TEMP" ]; then
            color=$(get_color "$TEMP")
            disk_name=$(basename "$disk")
            # Apply background color to the entire disk and temperature pair
            color_code=$(apply_color "$color")
            output+="${color_code}${disk_name}: ${TEMP}°C\e[0m "  # Use \e[0m to reset color after each entry
        else
            output+="$disk: Temperature not available "
        fi
    fi
done

echo -e "${output}"